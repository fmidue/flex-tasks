---
name: Build PKGDB

on:
  push:
    branches: [config-test-workflow]
  pull_request:
    branches: [main]

permissions: read-all

env:
  tasks: tasks
  config: pkgdb-config

jobs:
  build_db:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache DB
        id: restore-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.tasks }}/root
          key: ${{ hashFiles(format('{0}/stack.yaml', env.config)) }}-${{ hashFiles(format('{0}/package.yaml', env.config)) }}-${{ hashFiles(format('{0}/*.txt', env.tasks)) }}
          restore-keys: |
            ${{ hashFiles(format('{0}/stack.yaml', env.config)) }}-${{ hashFiles(format('{0}/package.yaml', env.config)) }}
            ${{ hashFiles(format('{0}/stack.yaml', env.config)) }}
      
      - uses: actions/checkout@v4
        with:
          repository: fmidue/haskell-template-setup
          path: haskell-template-setup
    
      - name: Setup DB
        id: setup
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: |
          set -ex
          sudo apt-get update
          sudo apt-get -y install zsh hlint expect colorized-logs
          sudo mv -f ./${{ env.config }}/stack.yaml ./haskell-template-setup
          sudo mv -f ./${{ env.config }}/package.yaml ./haskell-template-setup
          cd haskell-template-setup
          sed -i "s@/autotool/default@$(realpath $PWD/../${{ env.tasks }}/root)@" env
          ./create.sh
          sudo mv root ../${{ env.tasks }}
          set +ex
          cd ../${{ env.tasks }}
          ghc_file=$(find root/pkgdb -name "ghci*" -print -quit)
          temp="${ghc_file##*/ghci-}"
          ghc_version="${temp%-*.conf*}"
          echo "version=$ghc_version" >> $GITHUB_OUTPUT
          
      - name: Install GHC
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{steps.setup.outputs.version}}

      - name: Run Test Script
        run: |
          set -ex
          cd ${{ env.tasks }}
          find . -name '*.txt' -exec ./test.sh {} root \;
          set +ex

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        id: upload-artifact
        with:
          name: reports
          path: ${{ env.tasks }}/*/*.html
          if-no-files-found: error
          overwrite: true

      - name: Link Comment
        uses: peter-evans/commit-comment@v3
        with:
          body: |
            Changes in task folder. You may review the test results:

            [Download Reports](${{ steps.upload-artifact.outputs.artifact-url }})
