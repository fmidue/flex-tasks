---
name: Compile and Lint Flex-Tasks

env:
  tasks: tasks
  config: pkgdb-config
  script: tasks
  TERM: xterm

on:
  repository_dispatch:
    types: [CI-Completed]

permissions: read-all

jobs:
  test_flex:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.sha }}

      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: zsh hlint expect colorized-logs texlive-full
          version: 1.0

      - name: Cache DB
        id: restore-cache-db
        uses: actions/cache@v3
        with:
          path: ${{ env.tasks }}/root
          key:
            ${{ hashFiles(format('{0}/stack.yaml', env.config), format('{0}/package.yaml', env.config)) }}-${{ hashFiles('*/src/**/*hs') }}

      - uses: actions/checkout@v4
        if: steps.restore-cache-db.outputs.cache-hit != 'true'
        with:
          repository: fmidue/haskell-template-setup
          path: haskell-template-setup

      - name: Setup DB
        if: steps.restore-cache-db.outputs.cache-hit != 'true'
        run: |
          set -ex
          sudo mv -f ./${{ env.config }}/stack.yaml ./haskell-template-setup
          sudo mv -f ./${{ env.config }}/package.yaml ./haskell-template-setup
          cd haskell-template-setup
          awk '/extra-deps/ {f=1; next} f' ../stack.yaml |
            awk 'NR==FNR {buffer=buffer $0 RS; next} /extra-deps/ {print; printf buffer; next}1' - stack.yaml > new_stack.yaml
          sudo mv -f new_stack.yaml stack.yaml
          insert='\'\
          "  - git: https://github.com/${{ github.repository }}\n"\
          "    commit: ${{ github.event.client_payload.sha }}\n"\
          '    subdirs:\n'\
          '      - flex-tasks\n'\
          '      - flex-tasks-processing'
          sed -i "/extra-deps/a $insert" stack.yaml
          sed -i "s@/autotool/default@$(realpath $PWD/../${{ env.tasks }}/root)@" env
          ./create.sh
          sudo mv root ../${{ env.tasks }}
          set +ex

      - name: Determine GHC-Version
        id: ghc-version
        run: |
          set -ex
          cd ${{ env.tasks }}
          ghc_file=$(find root/pkgdb -name "ghci*" -print -quit)
          temp="${ghc_file##*/ghci-}"
          ghc_version="${temp%-*.conf*}"
          echo "version=$ghc_version" >> $GITHUB_OUTPUT
          set +ex

      - name: Install GHC
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{steps.ghc-version.outputs.version}}

      - name: Run Test Script
        run: |
          set -ex
          cd ${{ env.tasks }}
          export GHC_PACKAGE_PATH=root/pkgdb
          expect defaultConf.expect ${{ steps.ghc-version.outputs.version }}
          mapfile -t files \
            < <( find . -name '*.txt' -and -not -name "*NoInterpolation.txt")
          task_amount=${#a[@]}
          no_hint_tasks=0
          for name in "${files[@]}"; do
            bash ../${{ env.script }}/test.sh "$name" root
            folder="$(basename "$name" .txt)"
            hlint_removed=false
            if grep -q "No hints" "$folder/hlint.html"; then
              rm "$folder/hlint.html"
              hlint_removed=true
            fi
            if [ $(grep -vw "Compiling" -c "$folder/ghc.html") -eq 51 ]; then
              rm "$folder/ghc.html"
              if $hlint_removed; then
                rm "$folder/Check.hs"
                ((no_hint_tasks++))
              fi
            fi
          done
          if [ $task_amount -eq $no_hint_tasks]; then
            rm ../haskell-template-setup/stack.yaml
          fi
          set +ex

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        id: upload-artifact
        with:
          name: reports
          path: |
            ${{ env.tasks }}/*/*.html
            ${{ env.tasks }}/*/Check.hs
            haskell-template-setup/stack.yaml
          if-no-files-found: ignore
          overwrite: true

      - name: Link Comment
        if: ${{ steps.upload-artifact.outputs.artifact-url != '' }}
        uses: peter-evans/commit-comment@v3
        with:
          sha: ${{ github.event.client_payload.sha }}
          body: |
            The flex-task test workflow reported issues or suggestions for the following commit:
            __${{ github.event.client_payload.message }}__
            [Download Reports](${{ steps.upload-artifact.outputs.artifact-url }})
